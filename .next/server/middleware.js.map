{"version":3,"file":"middleware.js","mappings":";;;;;;;;;;;;;;;;AAAO;AACP,kBAAkB,OAAO;AACzB,iCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,yDAAyD;AACzD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA,MAAM;AACN,6CAA6C,YAAY;AACzD;AACA,SAAS;AACT;AACA;;AAEA;;AC9G8C;AAC9C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,SAAS;AACT;AACA;;AAEA;;AC9CO,SAASA,mBAAmBC,WAAW,EAAEC,QAAQ,EAAEC,cAAc,EAAE;IACtE,IAAI,CAACF,aAAa;IAClB,IAAIE,gBAAgB;QAChBA,iBAAiBA,eAAeC,WAAW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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,IAAI,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,MAAM;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;ACpLyD;;AAEzD;;ACFsC;AACgB;AACM;AACjB;AACpC;AACA;AACP,gCAAgC;AAChC;AACA,QAAQ,WAAW;AACnB;AACA,4BAA4B,OAAO;AACnC,qBAAqB,aAAa;AAClC;AACA,SAAS;AACT;AACA,yBAAyB,sBAAc;AACvC,+BAA+B;AAC/B;AACA;AACA,iBAAiB,MAA8C,GAAG,CAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AC5EsC;AACgB;AACV;AAC5C,MAAM,kBAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;A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;AACA,QAAQ,oBAAoB;AAC5B;AACA;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACO;AACP;AACA;AACA,yBAAyB,gBAAgB;AACzC,2BAA2B,OAAO;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA,4BAA4B,yBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA,eAAe,MAA8C,GAAG,CAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sBAAsB,cAAc;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,SAAS;AACT,YAAY,IAA+C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA,UAAU,SAAsD,IAAI,CAAyC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,IAA+C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa;AACnE;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA,8DAA8D,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uBAAuB;AACvB;AACA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ACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4DAA4D;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD,qBAAqB,gBAAgB;AACrC,uCAAuC,wBAAwB;AAC/D;AACA,qBAAqB,mCAAmC;AACxD,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iDAAiD;AAC9E;AACA;AACA,oDAAoD,OAAO,GAAG,4BAA4B,WAAW;AACrG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA,sBAAsB,uCAAuC;AAC7D;AACA;AACA,8BAA8B,iDAAiD;AAC/E;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAGL;;;;;;;;;;AChRY;AACb,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,qCAA0C;AAC1C;AACA;AACA;AACA;AACA,CAAC,EAAC;AACF,gBAAgB,mBAAO,CAAC,EAA4B;;AAEpD;;;;;;;;ACZa;AACb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,0BAA0B,mBAAO,CAAC,GAA4C;AAC9E,8BAA8B,mBAAO,CAAC,GAAyD;AAC/F,mBAAmB,mBAAO,CAAC,GAA+B;AAC1D,2BAA2B,mBAAO,CAAC,GAAsD;AACzF,qGAAqG,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAA8C;AACtE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,OAAO;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,IAAI,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,MAAM;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;;;;;;;;ACzLa;AACb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,uCAAuC,mBAAO,CAAC,GAA0C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvDa;AACb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,eAAe,mBAAO,CAAC,GAAa;AACpC,aAAa,mBAAO,CAAC,GAAU;AAC/B,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;;AAEpB;;;;;;;;AClGa;AACb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,uBAAuB;AACvB,0BAA0B;AAC1B,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,yDAAyD;AACzD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,6CAA6C,YAAY;AACzD;AACA,SAAS;AACT;AACA;;AAEA","sources":["webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/","webpack://_N_E/./middleware.ts","webpack://_N_E/./node_modules/next/dist/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/./node_modules/next/dist/server/web/exports/next-response.js","webpack://_N_E/./node_modules/next/dist/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/server/web/utils.js"],"sourcesContent":["export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                result[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                result[key] = value;\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var ref, ref1;\n        // remove port if present\n        const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if (pathHasPrefix(lower, '/api')) return path;\n        if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path;\n    }\n    // Add the locale prefix to the path.\n    return addPathPrefix(path, `/${locale}`);\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(':')[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!pathHasPrefix(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith('/')) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return `/${withoutPrefix}`;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (options.i18nProvider) {\n        const result = options.i18nProvider.analyze(info.pathname);\n        info.locale = result.detectedLocale;\n        var _pathname;\n        info.pathname = (_pathname = result.pathname) != null ? _pathname : info.pathname;\n    } else if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale.detectedLocale;\n        var _pathname1;\n        info.pathname = (_pathname1 = pathLocale.pathname) != null ? _pathname1 : info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var ref, ref1, ref2, ref3, ref4;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, hostname);\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export * from \"next/dist/compiled/@edge-runtime/cookies\";\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment.startsWith('@')) {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return `${pathname}/${segment}`;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const ACTION = 'Next-Action';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const NEXT_URL = 'Next-Url';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? params.request.url : String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\n\n//# sourceMappingURL=adapter.js.map","\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-root-dir/middleware.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Middleware \"pages/middleware\" must export a `middleware` or a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/middleware\",\n              handler,\n          })\n        }\n    ","import { NextRequest , NextResponse } from \"next/server\";\r\n\r\nexport default function middleware(req : NextRequest){\r\n    const token = req.cookies.get('token')?.value\r\n    const path = req.nextUrl.pathname\r\n    if(token && path === '/login'){\r\n        return NextResponse.redirect(new URL('/',req.url))\r\n    }\r\n    else if(token && path.includes('/home')) return NextResponse.next()\r\n    else if(!token && path === '/') return NextResponse.next()\r\n    else if(!token && path.includes('/home')) return NextResponse.redirect(new URL('/login',req.url))\r\n    \r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getHostname = getHostname;\nfunction getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(':')[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var ref, ref1;\n        // remove port if present\n        const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.normalizeLocalePath = normalizeLocalePath;\nfunction normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.addLocale = addLocale;\nvar _addPathPrefix = require(\"./add-path-prefix\");\nvar _pathHasPrefix = require(\"./path-has-prefix\");\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0, _pathHasPrefix).pathHasPrefix(lower, '/api')) return path;\n        if ((0, _pathHasPrefix).pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0, _addPathPrefix).addPathPrefix(path, `/${locale}`);\n}\n\n//# sourceMappingURL=add-locale.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.addPathPrefix = addPathPrefix;\nvar _parsePath = require(\"./parse-path\");\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsePath).parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.addPathSuffix = addPathSuffix;\nvar _parsePath = require(\"./parse-path\");\nfunction addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsePath).parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.formatNextPathnameInfo = formatNextPathnameInfo;\nvar _removeTrailingSlash = require(\"./remove-trailing-slash\");\nvar _addPathPrefix = require(\"./add-path-prefix\");\nvar _addPathSuffix = require(\"./add-path-suffix\");\nvar _addLocale = require(\"./add-locale\");\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0, _addLocale).addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0, _addPathSuffix).addPathSuffix((0, _addPathPrefix).addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = (0, _addPathPrefix).addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? (0, _addPathSuffix).addPathSuffix(pathname, '/') : pathname : (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getNextPathnameInfo = getNextPathnameInfo;\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\nvar _removePathPrefix = require(\"./remove-path-prefix\");\nvar _pathHasPrefix = require(\"./path-has-prefix\");\nfunction getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && (0, _pathHasPrefix).pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = (0, _removePathPrefix).removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (options.i18nProvider) {\n        const result = options.i18nProvider.analyze(info.pathname);\n        info.locale = result.detectedLocale;\n        var _pathname;\n        info.pathname = (_pathname = result.pathname) != null ? _pathname : info.pathname;\n    } else if (i18n) {\n        const pathLocale = (0, _normalizeLocalePath).normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale.detectedLocale;\n        var _pathname1;\n        info.pathname = (_pathname1 = pathLocale.pathname) != null ? _pathname1 : info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parsePath = parsePath;\nfunction parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pathHasPrefix = pathHasPrefix;\nvar _parsePath = require(\"./parse-path\");\nfunction pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = (0, _parsePath).parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.removePathPrefix = removePathPrefix;\nvar _pathHasPrefix = require(\"./path-has-prefix\");\nfunction removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0, _pathHasPrefix).pathHasPrefix(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith('/')) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return `/${withoutPrefix}`;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.removeTrailingSlash = removeTrailingSlash;\nfunction removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction serialize(c) {\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n    \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`\n  ].filter(Boolean);\n  return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookieString(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value ?? \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookieString(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookieString(setCookie);\n  const { domain, expires, httponly, maxage, path, samesite, secure } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookieString(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => serialize(value2)).join(\"; \")\n    );\n    return this;\n  }\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => serialize(value)).join(\"; \")\n    );\n    return result;\n  }\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a;\n    this._headers = responseHeaders;\n    const setCookie = ((_a = responseHeaders.getAll) == null ? void 0 : _a.call(responseHeaders, \"set-cookie\")) ?? responseHeaders.get(\"set-cookie\") ?? [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookieString(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  delete(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this.set({ name, value: \"\", expires: new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(serialize).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = serialize(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _response.NextResponse;\n    }\n});\nvar _response = require(\"../spec-extension/response\");\n\n//# sourceMappingURL=next-response.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar _detectDomainLocale = require(\"../../shared/lib/i18n/detect-domain-locale\");\nvar _formatNextPathnameInfo = require(\"../../shared/lib/router/utils/format-next-pathname-info\");\nvar _getHostname = require(\"../../shared/lib/get-hostname\");\nvar _getNextPathnameInfo = require(\"../../shared/lib/router/utils/get-next-pathname-info\");\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var ref, ref1, ref2, ref3, ref4;\n        const info = (0, _getNextPathnameInfo).getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0, _getHostname).getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0, _detectDomainLocale).detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, hostname);\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0, _formatNextPathnameInfo).formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\nexports.NextURL = NextURL;\n\n//# sourceMappingURL=next-url.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar _cookies = _interopRequireWildcard(require(\"next/dist/compiled/@edge-runtime/cookies\"));\nObject.keys(_cookies).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (key in exports && exports[key] === _cookies[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _cookies[key];\n        }\n    });\n});\nfunction _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n    _getRequireWildcardCache = function() {\n        return cache;\n    };\n    return cache;\n}\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache();\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n\n//# sourceMappingURL=cookies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar _nextUrl = require(\"../next-url\");\nvar _utils = require(\"../utils\");\nvar _cookies = require(\"./cookies\");\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new _cookies.ResponseCookies(this.headers),\n            url: init.url ? new _nextUrl.NextURL(init.url, {\n                headers: (0, _utils).toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", (0, _utils).validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", (0, _utils).validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\nexports.NextResponse = NextResponse;\n\n//# sourceMappingURL=response.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fromNodeHeaders = fromNodeHeaders;\nexports.splitCookiesString = splitCookiesString;\nexports.toNodeHeaders = toNodeHeaders;\nexports.validateURL = validateURL;\nfunction fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\nfunction splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nfunction toNodeHeaders(headers) {\n    const result = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                result[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                result[key] = value;\n            }\n        }\n    }\n    return result;\n}\nfunction validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map"],"names":["detectDomainLocale","domainItems","hostname","detectedLocale","toLowerCase","item","ref","ref1","domainHostname","domain","split","defaultLocale","locales","some","locale","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","substring","query","undefined","hash","slice","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","lower","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","parsed","headers","host","Array","isArray","toString","normalizeLocalePath","pathnameParts","splice","join","removePathPrefix","withoutPrefix","length","getNextPathnameInfo","options","_nextConfig","i18n","nextConfig","parseData","paths","i18nProvider","result","analyze","_pathname","pathLocale","_pathname1","relativizeURL","url","base","baseURL","URL","relative","origin","protocol","ensureLeadingSlash","normalizeAppPath","reduce","segment","index","segments","normalizeRscPath","enabled","RSC","ACTION","NEXT_ROUTER_STATE_TREE","NEXT_ROUTER_PREFETCH","NEXT_URL","FETCH_CACHE_HEADER","RSC_CONTENT_TYPE_HEADER","RSC_VARY_HEADER","FLIGHT_PARAMETERS","NextResponse","middleware","req","token","cookies","get","value","nextUrl","redirect","includes","next","Object","defineProperty","exports","_addPathPrefix","require","_pathHasPrefix","_parsePath","_removeTrailingSlash","_addPathSuffix","_addLocale","_normalizeLocalePath","_removePathPrefix"],"sourceRoot":""}